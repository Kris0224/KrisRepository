{"remainingRequest":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\ideaworkzone\\leyou-manage-web\\src\\views\\item\\KrisBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\ideaworkzone\\leyou-manage-web\\src\\views\\item\\KrisBrand.vue","mtime":1561296446005},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    name: \"KrisBrand\",\n    data(){\n        return{\n            search: '', // 搜索过滤字段\n            totalBrands: 0, // 总条数\n            brands: [], // 当前页品牌数据\n            loading: true, // 是否在加载中\n            pagination: {}, // 分页信息\n            //头信息\n            headers:[\n                {text: '品牌id', align: 'center', value: 'id'},\n                {text: '品牌名称', align: 'center', sortable: false, value: 'name'},\n                {text: '品牌LOGO', align: 'center', sortable: false, value: 'image'},\n                {text: '品牌首字母', align: 'center', value: 'letter', sortable: true,},\n                {text: '操作', align: 'center',sortable: false,}\n            ],\n        }\n    },\n\n    //钩子函数\n    mounted() { // 渲染后执行\n        // 查询数据\n        this.getDataFromServer();\n    },\n\n        this.totalBrands=10;\n        //去后台查询\n        this.loadBrands;\n    },\n    watch:{\n        pagination: { // 监视pagination属性的变化\n            deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\n            handler() {\n                // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n                this.getDataFromServer();\n            }\n        },\n        search: { // 监视搜索字段\n            handler() {\n                this.getDataFromServer();\n            }\n        }\n    },\n    methods:{\n        getDataFromServer() { // 从服务的加载数的方法。\n            // 发起请求\n            this.$http.get(\"/item/brand/page\", {\n                params: {\n                    key: this.search, // 搜索条件\n                    page: this.pagination.page,// 当前页\n                    rows: this.pagination.rowsPerPage,// 每页大小\n                    sortBy: this.pagination.sortBy,// 排序字段\n                    desc: this.pagination.descending// 是否降序\n                }\n            }).then(resp => { // 这里使用箭头函数\n                this.brands = resp.data.items;\n                this.totalBrands = resp.data.total;\n                // 完成赋值后，把加载状态赋值为false\n                this.loading = false;\n            })\n        }\n    }\n\n}\n",{"version":3,"sources":["KrisBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"KrisBrand.vue","sourceRoot":"src/views/item","sourcesContent":["<template>\r\n    <div>\r\n        <v-card-title>\r\n            <v-btn color=\"primary\">新增品牌</v-btn>\r\n            <!--空间隔离组件-->\r\n            <v-spacer />\r\n            <!--搜索框，与search属性关联-->\r\n            <v-text-field label=\"输入关键字搜索\" v-model=\"search\" append-icon=\"search\"/>\r\n        </v-card-title>\r\n    <v-data-table\r\n            :headers=\"headers\"\r\n            :items=\"brands\"\r\n            :pagination.sync=\"pagination\"\r\n            :total-items=\"totalDesserts\"\r\n            :loading=\"loading\"\r\n            class=\"elevation-1\"\r\n    >\r\n        <template slot=\"items\" slot-scope=\"props\">\r\n            <td class=\"text-xs-center\">{{ props.item.id }}</td>\r\n            <td class=\"text-xs-center\">{{ props.item.name }}</td>\r\n            <td class=\"text-xs-center\"><img :src=\"props.item.image\"></td>\r\n            <td class=\"text-xs-center\">{{ props.item.letter }}</td>\r\n            <td class=\"text-xs-center\">\r\n                <v-btn flat icon color=\"info\">\r\n                    <v-icon>edit</v-icon>\r\n                </v-btn>\r\n                <v-btn flat icon color=\"error\">\r\n                    <v-icon>delete</v-icon>\r\n                </v-btn>\r\n            </td>\r\n        </template>\r\n    </v-data-table>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"KrisBrand\",\r\n        data(){\r\n            return{\r\n                search: '', // 搜索过滤字段\r\n                totalBrands: 0, // 总条数\r\n                brands: [], // 当前页品牌数据\r\n                loading: true, // 是否在加载中\r\n                pagination: {}, // 分页信息\r\n                //头信息\r\n                headers:[\r\n                    {text: '品牌id', align: 'center', value: 'id'},\r\n                    {text: '品牌名称', align: 'center', sortable: false, value: 'name'},\r\n                    {text: '品牌LOGO', align: 'center', sortable: false, value: 'image'},\r\n                    {text: '品牌首字母', align: 'center', value: 'letter', sortable: true,},\r\n                    {text: '操作', align: 'center',sortable: false,}\r\n                ],\r\n            }\r\n        },\r\n\r\n        //钩子函数\r\n        mounted() { // 渲染后执行\r\n            // 查询数据\r\n            this.getDataFromServer();\r\n        },\r\n\r\n            this.totalBrands=10;\r\n            //去后台查询\r\n            this.loadBrands;\r\n        },\r\n        watch:{\r\n            pagination: { // 监视pagination属性的变化\r\n                deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\r\n                handler() {\r\n                    // 变化后的回调函数，这里我们再次调用getDataFromServer即可\r\n                    this.getDataFromServer();\r\n                }\r\n            },\r\n            search: { // 监视搜索字段\r\n                handler() {\r\n                    this.getDataFromServer();\r\n                }\r\n            }\r\n        },\r\n        methods:{\r\n            getDataFromServer() { // 从服务的加载数的方法。\r\n                // 发起请求\r\n                this.$http.get(\"/item/brand/page\", {\r\n                    params: {\r\n                        key: this.search, // 搜索条件\r\n                        page: this.pagination.page,// 当前页\r\n                        rows: this.pagination.rowsPerPage,// 每页大小\r\n                        sortBy: this.pagination.sortBy,// 排序字段\r\n                        desc: this.pagination.descending// 是否降序\r\n                    }\r\n                }).then(resp => { // 这里使用箭头函数\r\n                    this.brands = resp.data.items;\r\n                    this.totalBrands = resp.data.total;\r\n                    // 完成赋值后，把加载状态赋值为false\r\n                    this.loading = false;\r\n                })\r\n            }\r\n        }\r\n\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}