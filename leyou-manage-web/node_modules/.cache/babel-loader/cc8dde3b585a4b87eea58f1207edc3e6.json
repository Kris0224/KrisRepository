{"remainingRequest":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js!I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js!I:\\ideaworkzone\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\ideaworkzone\\leyou-manage-web\\src\\views\\item\\KrisBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\ideaworkzone\\leyou-manage-web\\src\\views\\item\\KrisBrand.vue","mtime":1561296103946},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1549812933000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\ideaworkzone\\leyou-manage-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MyBrandForm from './MyBrandForm';\nexport default {\n  name: \"my-brand\",\n  data: function data() {\n    return {\n      search: '',\n      // 搜索过滤字段\n      totalBrands: 0,\n      // 总条数\n      brands: [],\n      // 当前页品牌数据\n      loading: true,\n      // 是否在加载中\n      pagination: {},\n      // 分页信息\n      headers: [{\n        text: 'id',\n        align: 'center',\n        value: 'id'\n      }, {\n        text: '名称',\n        align: 'center',\n        sortable: false,\n        value: 'name'\n      }, {\n        text: 'LOGO',\n        align: 'center',\n        sortable: false,\n        value: 'image'\n      }, {\n        text: '首字母',\n        align: 'center',\n        value: 'letter',\n        sortable: true\n      }, {\n        text: '操作',\n        align: 'center',\n        value: 'id',\n        sortable: false\n      }]\n    };\n  },\n  mounted: function mounted() {\n    // 渲染后执行\n    // 查询数据\n    this.getDataFromServer();\n  },\n  watch: {\n    pagination: {\n      // 监视pagination属性的变化\n      deep: true,\n      // deep为true，会监视pagination的属性及属性中的对象属性变化\n      handler: function handler() {\n        // 变化后的回调函数，这里我们再次调用getDataFromServer即可\n        this.getDataFromServer();\n      }\n    },\n    search: {\n      // 监视搜索字段\n      handler: function handler() {\n        this.getDataFromServer();\n      }\n    }\n  },\n  methods: {\n    getDataFromServer: function getDataFromServer() {\n      var _this = this;\n\n      // 从服务的加载数的方法。\n      // 发起请求\n      this.$http.get(\"/item/brand/page\", {\n        params: {\n          key: this.search,\n          // 搜索条件\n          page: this.pagination.page,\n          // 当前页\n          rows: this.pagination.rowsPerPage,\n          // 每页大小\n          sortBy: this.pagination.sortBy,\n          // 排序字段\n          desc: this.pagination.descending // 是否降序\n\n        }\n      }).then(function (resp) {\n        // 这里使用箭头函数\n        _this.brands = resp.data.items;\n        _this.totalBrands = resp.data.total; // 完成赋值后，把加载状态赋值为false\n\n        _this.loading = false;\n      });\n    }\n  }\n};",{"version":3,"sources":["KrisBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,OAAA,WAAA,MAAA,eAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,MAAA,EAAA,EADA;AACA;AACA,MAAA,WAAA,EAAA,CAFA;AAEA;AACA,MAAA,MAAA,EAAA,EAHA;AAGA;AACA,MAAA,OAAA,EAAA,IAJA;AAIA;AACA,MAAA,UAAA,EAAA,EALA;AAKA;AACA,MAAA,OAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,KAAA,EAAA,QAAA;AAAA,QAAA,KAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OALA;AANA,KAAA;AAcA,GAjBA;AAkBA,EAAA,OAlBA,qBAkBA;AAAA;AACA;AACA,SAAA,iBAAA;AACA,GArBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AAAA;AACA,MAAA,IAAA,EAAA,IADA;AACA;AACA,MAAA,OAFA,qBAEA;AACA;AACA,aAAA,iBAAA;AACA;AALA,KADA;AAQA,IAAA,MAAA,EAAA;AAAA;AACA,MAAA,OADA,qBACA;AACA,aAAA,iBAAA;AACA;AAHA;AARA,GAtBA;AAoCA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,+BACA;AAAA;;AAAA;AACA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,kBAAA,EAAA;AACA,QAAA,MAAA,EAAA;AACA,UAAA,GAAA,EAAA,KAAA,MADA;AACA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,IAFA;AAEA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,WAHA;AAGA;AACA,UAAA,MAAA,EAAA,KAAA,UAAA,CAAA,MAJA;AAIA;AACA,UAAA,IAAA,EAAA,KAAA,UAAA,CAAA,UALA,CAKA;;AALA;AADA,OAAA,EAQA,IARA,CAQA,UAAA,IAAA,EAAA;AAAA;AACA,QAAA,KAAA,CAAA,MAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA;AACA,QAAA,KAAA,CAAA,WAAA,GAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAFA,CAGA;;AACA,QAAA,KAAA,CAAA,OAAA,GAAA,KAAA;AACA,OAbA;AAcA;AAjBA;AApCA,CAAA","sourcesContent":["<template>\r\n    <v-card>\r\n        <v-card-title>\r\n            <v-btn color=\"primary\" @click=\"addBrand\">新增品牌</v-btn>\r\n            <!--搜索框，与search属性关联-->\r\n            <v-spacer/>\r\n            <v-text-field label=\"输入关键字搜索\" v-model.lazy=\"search\" append-icon=\"search\" hide-details/>\r\n        </v-card-title>\r\n        <v-divider/>\r\n        <v-data-table\r\n                :headers=\"headers\"\r\n                :items=\"brands\"\r\n                :pagination.sync=\"pagination\"\r\n                :total-items=\"totalBrands\"\r\n                :loading=\"loading\"\r\n                class=\"elevation-1\"\r\n        >\r\n            <template slot=\"items\" slot-scope=\"props\">\r\n                <td>{{ props.item.id }}</td>\r\n                <td class=\"text-xs-center\">{{ props.item.name }}</td>\r\n                <td class=\"text-xs-center\"><img :src=\"props.item.image\"></td>\r\n                <td class=\"text-xs-center\">{{ props.item.letter }}</td>\r\n                <td class=\"justify-center layout\">\r\n                    <v-btn color=\"info\">编辑</v-btn>\r\n                    <v-btn color=\"warning\">删除</v-btn>\r\n                </td>\r\n            </template>\r\n        </v-data-table>\r\n    </v-card>\r\n</template>\r\n<script>\r\n    import MyBrandForm from './MyBrandForm'\r\n    export default {\r\n        name: \"my-brand\",\r\n        data() {\r\n            return {\r\n                search: '', // 搜索过滤字段\r\n                totalBrands: 0, // 总条数\r\n                brands: [], // 当前页品牌数据\r\n                loading: true, // 是否在加载中\r\n                pagination: {}, // 分页信息\r\n                headers: [\r\n                    {text: 'id', align: 'center', value: 'id'},\r\n                    {text: '名称', align: 'center', sortable: false, value: 'name'},\r\n                    {text: 'LOGO', align: 'center', sortable: false, value: 'image'},\r\n                    {text: '首字母', align: 'center', value: 'letter', sortable: true,},\r\n                    {text: '操作', align: 'center', value: 'id', sortable: false}\r\n                ]\r\n            }\r\n        },\r\n        mounted() { // 渲染后执行\r\n            // 查询数据\r\n            this.getDataFromServer();\r\n        },\r\n        watch: {\r\n            pagination: { // 监视pagination属性的变化\r\n                deep: true, // deep为true，会监视pagination的属性及属性中的对象属性变化\r\n                handler() {\r\n                    // 变化后的回调函数，这里我们再次调用getDataFromServer即可\r\n                    this.getDataFromServer();\r\n                }\r\n            },\r\n            search: { // 监视搜索字段\r\n                handler() {\r\n                    this.getDataFromServer();\r\n                }\r\n            }\r\n        },\r\n        methods: {\r\n            getDataFromServer() { // 从服务的加载数的方法。\r\n                // 发起请求\r\n                this.$http.get(\"/item/brand/page\", {\r\n                    params: {\r\n                        key: this.search, // 搜索条件\r\n                        page: this.pagination.page,// 当前页\r\n                        rows: this.pagination.rowsPerPage,// 每页大小\r\n                        sortBy: this.pagination.sortBy,// 排序字段\r\n                        desc: this.pagination.descending// 是否降序\r\n                    }\r\n                }).then(resp => { // 这里使用箭头函数\r\n                    this.brands = resp.data.items;\r\n                    this.totalBrands = resp.data.total;\r\n                    // 完成赋值后，把加载状态赋值为false\r\n                    this.loading = false;\r\n                })\r\n            }\r\n        }\r\n    }\r\n</script>"],"sourceRoot":"src/views/item"}]}